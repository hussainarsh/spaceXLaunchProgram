{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\n\nfunction HomePage(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map(function (a, i) {\n      return 2006 + i;\n    }),\n    activeItem: false\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"],\n    activeItem: false\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"],\n    activeItem: false\n  }];\n\n  var _useState = useState(initialState),\n      filterState = _useState[0],\n      setFilterState = _useState[1];\n\n  var _useState2 = useState([]),\n      spaceXData = _useState2[0],\n      setSpaceXData = _useState2[1];\n\n  useEffect(function () {\n    setSpaceXData(data);\n  }, [0]);\n\n  var launchList = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 22\n  }, this);\n\n  launchList = /*#__PURE__*/_jsxDEV(LauchList, {\n    launchData: spaceXData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 18\n  }, this);\n\n  function updateQueryStringParameter(uri, key, value) {\n    var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n    var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\n\n    if (uri.match(re)) {\n      return uri.replace(re, '$1' + key + \"=\" + value + '$2');\n    } else {\n      return uri + separator + key + \"=\" + value;\n    }\n  }\n\n  var onFilterApply = function onFilterApply(category, value) {\n    var queryString = updateQueryStringParameter(location.search, category, value);\n    window.history.pushState(\"\", \"\", queryString);\n    fetch(\"https://api.spaceXdata.com/v3/launches\".concat(queryString, \"&limit=100\")).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setSpaceXData(data);\n      var updatedArray = filterState.map(function (a) {\n        if (a.type == 'launch_year') {\n          a.activeItem = value;\n        }\n\n        if (a.type == 'launch_success') {\n          a.activeItem = value;\n        }\n\n        if (a.type == 'land_success') {\n          a.activeItem = value;\n        }\n\n        return a;\n      });\n      setFilterState(updatedArray);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(XSPFilters, {\n        filterData: filterState,\n        onFilterApply: onFilterApply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), launchList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"SGM4v1Z7KmPzwo5+rlZpngPjWdE=\");\n\n_c = HomePage;\nexport var __N_SSP = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","useEffect","Header","Footer","Layout","XSPFilters","LauchList","HomePage","data","initialState","type","displayName","Array","Date","getFullYear","fill","map","a","i","activeItem","filterState","setFilterState","spaceXData","setSpaceXData","launchList","updateQueryStringParameter","uri","key","value","re","RegExp","separator","indexOf","match","replace","onFilterApply","category","queryString","location","search","window","history","pushState","fetch","then","response","json","updatedArray"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\n\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\n\r\nfunction HomePage({data}) {\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n        activeItem: false\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n        activeItem: false\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n        activeItem: false\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n    const [spaceXData, setSpaceXData] = useState([]);\r\n\r\n    useEffect(() => {\r\n      setSpaceXData(data);\r\n    }, [0])\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList launchData={spaceXData} />\r\n\r\n    function updateQueryStringParameter(uri, key, value) {\r\n      var re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\r\n      var separator = uri.indexOf('?') !== -1 ? \"&\" : \"?\";\r\n      if (uri.match(re)) {\r\n        return uri.replace(re, '$1' + key + \"=\" + value + '$2');\r\n      }\r\n      else {\r\n        return uri + separator + key + \"=\" + value;\r\n      }\r\n    }\r\n\r\n    const onFilterApply = (category, value) => {\r\n      var queryString = updateQueryStringParameter(location.search, category, value);\r\n      window.history.pushState(\"\", \"\", queryString);\r\n      fetch(`https://api.spaceXdata.com/v3/launches${queryString}&limit=100`).then(response => response.json()).then(\r\n        (data) => {\r\n          setSpaceXData(data)\r\n\r\n          const updatedArray = filterState.map(a => {\r\n            if (a.type == 'launch_year') {\r\n               a.activeItem = value;\r\n            }\r\n            if (a.type == 'launch_success') {\r\n              a.activeItem = value;\r\n            }\r\n            if (a.type == 'land_success') {\r\n              a.activeItem = value;\r\n            }\r\n            return a;\r\n         });\r\n\r\n          setFilterState(updatedArray);\r\n        }\r\n      );\r\n    }\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getServerSideProps({query}) {\r\n  const queryString = require('query-string');\r\n  const res = await fetch(`https://api.spaceXdata.com/v3/launches?${queryString.stringify(query)}&limit=100`)\r\n  const data = await res.json()\r\n  return {\r\n    props: {\r\n      data\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
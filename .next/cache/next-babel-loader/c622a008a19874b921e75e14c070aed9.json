{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createBrowserHistory } from \"history\";\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\nimport { getParam, setParam } from '../helper/urlManipulation.js';\n\nfunction HomePage({\n  posts\n}) {\n  let initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map((a, i) => 2006 + i)\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"]\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"]\n  }];\n  const {\n    0: filterState,\n    1: setFilterState\n  } = useState(initialState);\n  const {\n    0: spaceXData,\n    1: setSpaceXData\n  } = useState([]);\n  const {\n    0: urlQuery,\n    1: setUrlQuery\n  } = useState();\n  const {\n    0: initialUrl,\n    1: setInitialUrl\n  } = useState();\n  const {\n    0: pValues,\n    1: setPValues\n  } = useState();\n\n  const queryString = require('query-string');\n\n  useEffect(() => {\n    setSpaceXData(posts);\n  }, [0]);\n\n  let launchList = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 22\n  }, this);\n\n  launchList = /*#__PURE__*/_jsxDEV(LauchList, {\n    launchData: spaceXData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 18\n  }, this);\n\n  function usePrevious(value) {\n    // The ref object is a generic container whose current property is mutable ...\n    // ... and can hold any value, similar to an instance property on a class\n    const ref = useRef(); // Store current value in ref\n\n    useEffect(() => {\n      ref.current = value;\n    }, [value]); // Only re-run if value changes\n    // Return previous value (happens before update in useEffect above)\n\n    return ref.current;\n  }\n\n  const onFilterApply = (category, value) => {\n    let detectValues = {};\n    let parsedValues = queryString.parse(location.search); //if(Object.keys(parsedValues).length === 0 && parsedValues.constructor === Object){\n\n    parsedValues[category] = value; //}\n\n    const prevValues = usePrevious(pValues);\n    console.log('prevValues', prevValues);\n    setPValues(parsedValues); //const returnedTarget = Object.assign(pValues, parsedValues);\n    //parsedValues.category = category;\n    //parsedValues.launch_year = '2009';\n    //const stringified = queryString.stringify(parsed);\n    //location.search = stringified;\n    //console.log(stringified);\n    //let currentParams = location.search;\n    // console.log(parsedValues)\n  }; // useEffect(() => {\n  //   console.log('pValues', pValues)\n  // }, [pValues])\n\n\n  useEffect(() => {\n    fetch(`https://api.spaceXdata.com/v3/launches?limit=100&${urlQuery}`).then(response => response.json()).then(data => setSpaceXData(data));\n  }, [urlQuery]);\n  useEffect(() => {\n    setInitialUrl(window.location.href);\n  }, [0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(XSPFilters, {\n        filterData: filterState,\n        onFilterApply: onFilterApply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), launchList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100');\n  const posts = await res.json();\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","useEffect","useRef","createBrowserHistory","Header","Footer","Layout","XSPFilters","LauchList","getParam","setParam","HomePage","posts","initialState","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","filterState","setFilterState","spaceXData","setSpaceXData","urlQuery","setUrlQuery","initialUrl","setInitialUrl","pValues","setPValues","queryString","require","launchList","usePrevious","value","ref","current","onFilterApply","category","detectValues","parsedValues","parse","location","search","prevValues","console","log","fetch","then","response","json","window","href","getStaticProps","res","props"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef } from 'react'\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\nimport { getParam, setParam } from '../helper/urlManipulation.js';\r\n\r\nfunction HomePage({posts}) {\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n    const [spaceXData, setSpaceXData] = useState([]);\r\n    const [urlQuery, setUrlQuery] = useState();\r\n    const [initialUrl, setInitialUrl] = useState()\r\n\r\n    const [pValues, setPValues] = useState();\r\n    const queryString = require('query-string');\r\n\r\n    useEffect(() => {\r\n      setSpaceXData(posts);\r\n    }, [0])\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList launchData={spaceXData} />\r\n\r\n    function usePrevious(value) {\r\n\r\n      // The ref object is a generic container whose current property is mutable ...\r\n    \r\n      // ... and can hold any value, similar to an instance property on a class\r\n    \r\n      const ref = useRef();\r\n    \r\n      \r\n    \r\n      // Store current value in ref\r\n    \r\n      useEffect(() => {\r\n    \r\n        ref.current = value;\r\n    \r\n      }, [value]); // Only re-run if value changes\r\n    \r\n      \r\n    \r\n      // Return previous value (happens before update in useEffect above)\r\n    \r\n      return ref.current;\r\n    \r\n    }\r\n\r\n    const onFilterApply = (category, value) => {\r\n\r\n      let detectValues = {}\r\n      \r\n      let parsedValues = queryString.parse(location.search)\r\n\r\n      //if(Object.keys(parsedValues).length === 0 && parsedValues.constructor === Object){\r\n        parsedValues[category] = value;\r\n      //}\r\n\r\n      const prevValues = usePrevious(pValues);\r\n      console.log('prevValues', prevValues)\r\n      setPValues(parsedValues);\r\n\r\n      //const returnedTarget = Object.assign(pValues, parsedValues);\r\n      //parsedValues.category = category;\r\n      //parsedValues.launch_year = '2009';\r\n\r\n      //const stringified = queryString.stringify(parsed);\r\n\r\n      //location.search = stringified;\r\n      //console.log(stringified);\r\n      //let currentParams = location.search;\r\n     // console.log(parsedValues)\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //   console.log('pValues', pValues)\r\n    // }, [pValues])\r\n\r\n    useEffect(() => {\r\n      fetch(`https://api.spaceXdata.com/v3/launches?limit=100&${urlQuery}`).then(response => response.json()).then(data => setSpaceXData(data));\r\n    }, [urlQuery])\r\n\r\n    useEffect(() => {\r\n      setInitialUrl(window.location.href)\r\n    }, [0])\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\r\n  const posts = await res.json()\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
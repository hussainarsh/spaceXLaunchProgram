{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\n\nfunction HomePage({\n  posts\n}) {\n  let initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map((a, i) => 2006 + i) //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\n\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"launch_success\"]\n\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"land_success\"]\n\n  }];\n  const {\n    0: filterState,\n    1: setFilterState\n  } = useState(initialState);\n\n  let launchList = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  });\n\n  launchList = __jsx(LauchList, {\n    launchData: posts // dataLimit={this.state.dataLimit}\n    // fetchMoreData={this.fetchMoreData}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  }); //   const onFilterApply = (category, value) => {\n  //     const currentQueries = getParam(this.state.queryString);\n  //     const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\n  //     if (currentCategory.activeItem && currentCategory.activeItem === value) {\n  //         currentQueries[category] = null;\n  //         currentCategory.activeItem = null;\n  //     }\n  //     else {\n  //         currentCategory.activeItem = value;\n  //         currentQueries[category] = value;\n  //     }\n  //     const queryString = setParam(currentQueries);\n  //     this.props.history.push(\"?\" + queryString);\n  //     this.setState(prevState => {\n  //         return {\n  //             filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\n  //             queryString: queryString\n  //         }\n  //     })\n  // }\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(XSPFilters, {\n    filterData: filterState,\n    onFilterApply: onFilterApply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), launchList), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }));\n}\n\nexport async function getStaticProps() {\n  // Call an external API endpoint to get posts.\n  // You can use any data fetching library\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100');\n  const posts = await res.json(); // By returning { props: posts }, the Blog component\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: {\n      posts\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","Header","Footer","Layout","XSPFilters","LauchList","HomePage","posts","initialState","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","filterState","setFilterState","launchList","onFilterApply","getStaticProps","res","fetch","json","props"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AAEzB,MAAIC,YAAY,GAAG,CAAC;AACdC,IAAAA,IAAI,EAAE,aADQ;AAEdC,IAAAA,WAAW,EAAE,aAFC;AAGdC,IAAAA,IAAI,EAAE,IAAIC,KAAJ,CAAW,IAAIC,IAAJ,GAAWC,WAAX,KAA2B,IAAtC,EAA6CC,IAA7C,GAAoDC,GAApD,CAAwD,CAACC,CAAD,EAAIC,CAAJ,KAAU,OAAOA,CAAzE,CAHQ,CAId;;AAJc,GAAD,EAMjB;AACIT,IAAAA,IAAI,EAAE,gBADV;AAEIC,IAAAA,WAAW,EAAE,mBAFjB;AAGIC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAHV,CAII;;AAJJ,GANiB,EAYjB;AACIF,IAAAA,IAAI,EAAE,cADV;AAEIC,IAAAA,WAAW,EAAE,oBAFjB;AAGIC,IAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAHV,CAII;;AAJJ,GAZiB,CAAnB;AAmBE,QAAM;AAAA,OAACQ,WAAD;AAAA,OAAcC;AAAd,MAAgCpB,QAAQ,CAACQ,YAAD,CAA9C;;AAEA,MAAIa,UAAU,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAjB;;AAEAA,EAAAA,UAAU,GAAG,MAAC,SAAD;AACG,IAAA,UAAU,EAAEd,KADf,CAEG;AACA;AAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAb,CAzBuB,CA+BzB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO,4BACP,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,EAEL,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,UAAU,EAAEY,WAAxB;AAAqC,IAAA,aAAa,EAAEG,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,UAFH,CAFK,EAMP,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANO,CAAP;AAQD;;AAED,OAAO,eAAeE,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAD,CAAvB;AACA,QAAMlB,KAAK,GAAG,MAAMiB,GAAG,CAACE,IAAJ,EAApB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLpB,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,QAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\n\r\nfunction HomePage({posts}) {\r\n\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n        //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"launch_success\"]\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"land_success\"]\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList\r\n                    launchData={posts}\r\n                    // dataLimit={this.state.dataLimit}\r\n                    // fetchMoreData={this.fetchMoreData}\r\n                />\r\n\r\n  //   const onFilterApply = (category, value) => {\r\n  //     const currentQueries = getParam(this.state.queryString);\r\n  //     const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\r\n\r\n  //     if (currentCategory.activeItem && currentCategory.activeItem === value) {\r\n  //         currentQueries[category] = null;\r\n  //         currentCategory.activeItem = null;\r\n  //     }\r\n  //     else {\r\n  //         currentCategory.activeItem = value;\r\n  //         currentQueries[category] = value;\r\n  //     }\r\n  //     const queryString = setParam(currentQueries);\r\n\r\n  //     this.props.history.push(\"?\" + queryString);\r\n  //     this.setState(prevState => {\r\n  //         return {\r\n  //             filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\r\n  //             queryString: queryString\r\n  //         }\r\n  //     })\r\n  // }\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
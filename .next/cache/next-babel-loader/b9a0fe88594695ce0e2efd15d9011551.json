{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\n\nfunction HomePage(_ref) {\n  _s();\n\n  var _this = this;\n\n  var posts = _ref.posts;\n  var initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map(function (a, i) {\n      return 2006 + i;\n    }) //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\n\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"launch_success\"]\n\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"land_success\"]\n\n  }];\n\n  var _useState = useState(initialState),\n      filterState = _useState[0],\n      setFilterState = _useState[1];\n\n  var launchList = __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }\n  });\n\n  launchList = __jsx(LauchList, {\n    launchData: posts // dataLimit={this.state.dataLimit}\n    // fetchMoreData={this.fetchMoreData}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 18\n    }\n  });\n\n  onFilterApply = function onFilterApply(category, value) {\n    var currentQueries = getParam(_this.state.queryString);\n\n    var currentCategory = _objectSpread({}, _this.state.filterData.find(function (filterCategory) {\n      return filterCategory.type === category;\n    }));\n\n    if (currentCategory.activeItem && currentCategory.activeItem === value) {\n      currentQueries[category] = null;\n      currentCategory.activeItem = null;\n    } else {\n      currentCategory.activeItem = value;\n      currentQueries[category] = value;\n    }\n\n    var queryString = setParam(currentQueries);\n\n    _this.props.history.push(\"?\" + queryString);\n\n    _this.setState(function (prevState) {\n      return {\n        filterData: prevState.filterData.map(function (filterCategory) {\n          return filterCategory.type === category ? currentCategory : filterCategory;\n        }),\n        queryString: queryString\n      };\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }\n  }), __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, __jsx(XSPFilters, {\n    filterData: filterState,\n    onFilterApply: this.onFilterApply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), launchList), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 3\n    }\n  }));\n}\n\n_s(HomePage, \"Lltts57VmbzKZnFZZkQQXHOTZsM=\");\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","Header","Footer","Layout","XSPFilters","LauchList","HomePage","posts","initialState","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","filterState","setFilterState","launchList","onFilterApply","category","value","currentQueries","getParam","state","queryString","currentCategory","filterData","find","filterCategory","activeItem","setParam","props","history","push","setState","prevState"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\n\r\nfunction HomePage({posts}) {\r\n\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n        //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"launch_success\"]\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"land_success\"]\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList\r\n                    launchData={posts}\r\n                    // dataLimit={this.state.dataLimit}\r\n                    // fetchMoreData={this.fetchMoreData}\r\n                />\r\n\r\n                onFilterApply = (category, value) => {\r\n                  const currentQueries = getParam(this.state.queryString);\r\n                  const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\r\n          \r\n                  if (currentCategory.activeItem && currentCategory.activeItem === value) {\r\n                      currentQueries[category] = null;\r\n                      currentCategory.activeItem = null;\r\n                  }\r\n                  else {\r\n                      currentCategory.activeItem = value;\r\n                      currentQueries[category] = value;\r\n                  }\r\n                  const queryString = setParam(currentQueries);\r\n          \r\n                  this.props.history.push(\"?\" + queryString);\r\n                  this.setState(prevState => {\r\n                      return {\r\n                          filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\r\n                          queryString: queryString\r\n                      }\r\n                  })\r\n              }\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={this.onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
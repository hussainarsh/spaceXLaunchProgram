{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { createBrowserHistory } from \"history\";\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\nimport { getParam, setParam } from '../helper/urlManipulation.js';\n\nfunction HomePage(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n  var initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map(function (a, i) {\n      return 2006 + i;\n    })\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"]\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"]\n  }];\n\n  var _useState = useState(initialState),\n      filterState = _useState[0],\n      setFilterState = _useState[1];\n\n  var _useState2 = useState([]),\n      spaceXData = _useState2[0],\n      setSpaceXData = _useState2[1];\n\n  var _useState3 = useState(),\n      urlQuery = _useState3[0],\n      setUrlQuery = _useState3[1];\n\n  var _useState4 = useState(),\n      initialUrl = _useState4[0],\n      setInitialUrl = _useState4[1];\n\n  var _useState5 = useState(),\n      pValues = _useState5[0],\n      setPValues = _useState5[1];\n\n  var queryString = require('query-string');\n\n  useEffect(function () {\n    setSpaceXData(posts);\n  }, [0]);\n\n  var launchList = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 22\n  }, this);\n\n  launchList = /*#__PURE__*/_jsxDEV(LauchList, {\n    launchData: spaceXData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 18\n  }, this);\n  var ref = useRef();\n\n  var onFilterApply = function onFilterApply(category, value) {\n    var detectValues = {};\n    var parsedValues = queryString.parse(location.search);\n    parsedValues[category] = value;\n    setPValues(parsedValues);\n    ref.current = parsedValues; //const returnedTarget = Object.assign(pValues, parsedValues);\n    //parsedValues.category = category;\n    //parsedValues.launch_year = '2009';\n    //const stringified = queryString.stringify(parsed);\n    //location.search = stringified;\n    //console.log(stringified);\n    //let currentParams = location.search;\n\n    console.log(ref.current);\n  };\n\n  useEffect(function () {\n    fetch(\"https://api.spaceXdata.com/v3/launches?limit=100&\".concat(urlQuery)).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setSpaceXData(data);\n    });\n  }, [urlQuery]);\n  useEffect(function () {\n    setInitialUrl(window.location.href);\n  }, [0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(XSPFilters, {\n        filterData: filterState,\n        onFilterApply: onFilterApply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), launchList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"E92S2dwaWUYVkG87sMw+4FBu5oo=\");\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","useEffect","useRef","createBrowserHistory","Header","Footer","Layout","XSPFilters","LauchList","getParam","setParam","HomePage","posts","initialState","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","filterState","setFilterState","spaceXData","setSpaceXData","urlQuery","setUrlQuery","initialUrl","setInitialUrl","pValues","setPValues","queryString","require","launchList","ref","onFilterApply","category","value","detectValues","parsedValues","parse","location","search","current","console","log","fetch","then","response","json","window","href"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\nimport { getParam, setParam } from '../helper/urlManipulation.js';\r\n\r\nfunction HomePage({posts}) {\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n    const [spaceXData, setSpaceXData] = useState([]);\r\n    const [urlQuery, setUrlQuery] = useState();\r\n    const [initialUrl, setInitialUrl] = useState()\r\n\r\n    const [pValues, setPValues] = useState();\r\n    const queryString = require('query-string');\r\n\r\n    useEffect(() => {\r\n      setSpaceXData(posts);\r\n    }, [0])\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList launchData={spaceXData} />\r\n\r\n    const ref = useRef();\r\n\r\n    const onFilterApply = (category, value) => {\r\n\r\n      let detectValues = {}\r\n      \r\n      let parsedValues = queryString.parse(location.search)\r\n\r\n      parsedValues[category] = value;\r\n      setPValues(parsedValues);\r\n\r\n      ref.current = parsedValues;\r\n\r\n      //const returnedTarget = Object.assign(pValues, parsedValues);\r\n      //parsedValues.category = category;\r\n      //parsedValues.launch_year = '2009';\r\n\r\n      //const stringified = queryString.stringify(parsed);\r\n\r\n      //location.search = stringified;\r\n      //console.log(stringified);\r\n      //let currentParams = location.search;\r\n      console.log(ref.current)\r\n    }\r\n\r\n    useEffect(() => {\r\n      fetch(`https://api.spaceXdata.com/v3/launches?limit=100&${urlQuery}`).then(response => response.json()).then(data => setSpaceXData(data));\r\n    }, [urlQuery])\r\n\r\n    useEffect(() => {\r\n      setInitialUrl(window.location.href)\r\n    }, [0])\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\r\n  const posts = await res.json()\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
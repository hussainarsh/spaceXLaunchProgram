{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Ayan Hussian\\\\space\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from '../components/Header.js';\nimport Footer from '../components/Footer.js';\nimport Layout from '../components/Layout.js';\nimport XSPFilters from '../components/XSPFilters.js';\nimport LauchList from '../components/LaunchList/LaunchList';\n\nfunction HomePage(_ref) {\n  _s();\n\n  var posts = _ref.posts;\n  var history = useHistory();\n  var initialState = [{\n    type: \"launch_year\",\n    displayName: \"Launch Year\",\n    data: new Array(new Date().getFullYear() - 2005).fill().map(function (a, i) {\n      return 2006 + i;\n    }) //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\n\n  }, {\n    type: \"launch_success\",\n    displayName: \"Successful Launch\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"launch_success\"]\n\n  }, {\n    type: \"land_success\",\n    displayName: \"Successful Landing\",\n    data: [\"true\", \"false\"] //activeItem: this.props.query[\"land_success\"]\n\n  }];\n\n  var _useState = useState(initialState),\n      filterState = _useState[0],\n      setFilterState = _useState[1];\n\n  var _useState2 = useState([]),\n      spaceXData = _useState2[0],\n      setSpaceXData = _useState2[1]; //const [urlQuery, setUrlQuery] = useState(window.location);\n\n\n  useEffect(function () {\n    setSpaceXData(posts);\n  }, [0]);\n\n  var launchList = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 22\n  }, this);\n\n  launchList = /*#__PURE__*/_jsxDEV(LauchList, {\n    launchData: spaceXData // dataLimit={this.state.dataLimit}\n    // fetchMoreData={this.fetchMoreData}\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 18\n  }, this);\n\n  var onFilterApply = function onFilterApply(category, value) {\n    //const urlParams = new URLSearchParams(window.location.search);\n    //const myParam = urlParams.get('myParam');\n    //console.log(window.location)\n    // const searchParams = new URLSearchParams();\n    // searchParams.set(\"launch_year\", value);\n    var url = new URL(window.location);\n    var params = new URLSearchParams(url.search); //Add a third parameter.\n\n    params.set('baz', 3);\n    params.toString(); // \"foo=1&bar=2&baz=3\"\n\n    console.log('params', params);\n    var url2 = new URL('http://demourl.com/path?id=100&topic=main');\n    var search_params = url2.searchParams; // new value of \"id\" is set to \"101\"\n\n    search_params.set('id', '101'); // change the search property of the main url\n\n    url2.search = search_params.toString(); // the new url string\n\n    var new_url = url2.toString(); // output : http://demourl.com/path?id=101&topic=main\n\n    console.log(new_url);\n    var state = {\n      'page_id': 1,\n      'user_id': 5\n    };\n    var title = '';\n    var url3 = 'hello-world.html';\n    history.push(\"?\" + \"value=\".concat(value)); //fetch(`https://api.spaceXdata.com/v3/launches?launch_year=${value}`).then(response => response.json()).then(data => setSpaceXData(data));\n    // if (error) return <div>failed to load</div>\n    // if (!data) return <div>loading...</div>\n    // return <div>hello {data.name}!</div>\n    // const currentQueries = getParam(this.state.queryString);\n    // const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\n    // if (currentCategory.activeItem && currentCategory.activeItem === value) {\n    //     currentQueries[category] = null;\n    //     currentCategory.activeItem = null;\n    // }\n    // else {\n    //     currentCategory.activeItem = value;\n    //     currentQueries[category] = value;\n    // }\n    // const queryString = setParam(currentQueries);\n    // this.props.history.push(\"?\" + queryString);\n    // this.setState(prevState => {\n    //     return {\n    //         filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\n    //         queryString: queryString\n    //     }\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(XSPFilters, {\n        filterData: filterState,\n        onFilterApply: onFilterApply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), launchList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomePage, \"BWi7zfpDyaartcK4gHLPLVn2REQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["C:/Users/Ayan Hussian/space/pages/index.js"],"names":["React","useState","useEffect","useHistory","Header","Footer","Layout","XSPFilters","LauchList","HomePage","posts","history","initialState","type","displayName","data","Array","Date","getFullYear","fill","map","a","i","filterState","setFilterState","spaceXData","setSpaceXData","launchList","onFilterApply","category","value","url","URL","window","location","params","URLSearchParams","search","set","toString","console","log","url2","search_params","searchParams","new_url","state","title","url3","push"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Header from '../components/Header.js'\r\nimport Footer from '../components/Footer.js'\r\nimport Layout from '../components/Layout.js'\r\nimport XSPFilters from '../components/XSPFilters.js';\r\nimport LauchList from '../components/LaunchList/LaunchList';\r\n\r\nfunction HomePage({posts}) {\r\n  let history = useHistory();\r\n  let initialState = [{\r\n        type: \"launch_year\",\r\n        displayName: \"Launch Year\",\r\n        data: new Array((new Date().getFullYear() - 2005)).fill().map((a, i) => 2006 + i),\r\n        //activeItem: this.props.query[\"launch_year\"] && parseInt(this.props.query[\"launch_year\"])\r\n    },\r\n    {\r\n        type: \"launch_success\",\r\n        displayName: \"Successful Launch\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"launch_success\"]\r\n    },\r\n    {\r\n        type: \"land_success\",\r\n        displayName: \"Successful Landing\",\r\n        data: [\"true\", \"false\"],\r\n        //activeItem: this.props.query[\"land_success\"]\r\n    }]\r\n\r\n    const [filterState, setFilterState] = useState(initialState);\r\n    const [spaceXData, setSpaceXData] = useState([]);\r\n    //const [urlQuery, setUrlQuery] = useState(window.location);\r\n\r\n    useEffect(() => {\r\n      setSpaceXData(posts);\r\n    }, [0])\r\n\r\n    let launchList = <div></div>;\r\n\r\n    launchList = <LauchList\r\n                    launchData={spaceXData}\r\n                    // dataLimit={this.state.dataLimit}\r\n                    // fetchMoreData={this.fetchMoreData}\r\n                />\r\n\r\n    const onFilterApply = (category, value) => {\r\n      //const urlParams = new URLSearchParams(window.location.search);\r\n      //const myParam = urlParams.get('myParam');\r\n      //console.log(window.location)\r\n      // const searchParams = new URLSearchParams();\r\n      // searchParams.set(\"launch_year\", value);\r\n\r\n      let url = new URL(window.location);\r\n      let params = new URLSearchParams(url.search);\r\n\r\n      //Add a third parameter.\r\n      params.set('baz', 3);\r\n      params.toString(); // \"foo=1&bar=2&baz=3\"\r\n\r\n      console.log('params', params)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      var url2 = new URL('http://demourl.com/path?id=100&topic=main');\r\nvar search_params = url2.searchParams;\r\n\r\n// new value of \"id\" is set to \"101\"\r\nsearch_params.set('id', '101');\r\n\r\n// change the search property of the main url\r\nurl2.search = search_params.toString();\r\n\r\n// the new url string\r\nvar new_url = url2.toString();\r\n\r\n// output : http://demourl.com/path?id=101&topic=main\r\nconsole.log(new_url);\r\n\r\nconst state = { 'page_id': 1, 'user_id': 5 }\r\nconst title = ''\r\nconst url3 = 'hello-world.html'\r\n\r\nhistory.push(\"?\" + `value=${value}`)\r\n\r\n      \r\n      //fetch(`https://api.spaceXdata.com/v3/launches?launch_year=${value}`).then(response => response.json()).then(data => setSpaceXData(data));\r\n\r\n\r\n      // if (error) return <div>failed to load</div>\r\n      // if (!data) return <div>loading...</div>\r\n      // return <div>hello {data.name}!</div>\r\n      // const currentQueries = getParam(this.state.queryString);\r\n      // const currentCategory = { ...this.state.filterData.find(filterCategory => filterCategory.type === category) };\r\n\r\n      // if (currentCategory.activeItem && currentCategory.activeItem === value) {\r\n      //     currentQueries[category] = null;\r\n      //     currentCategory.activeItem = null;\r\n      // }\r\n      // else {\r\n      //     currentCategory.activeItem = value;\r\n      //     currentQueries[category] = value;\r\n      // }\r\n      // const queryString = setParam(currentQueries);\r\n\r\n      // this.props.history.push(\"?\" + queryString);\r\n      // this.setState(prevState => {\r\n      //     return {\r\n      //         filterData: prevState.filterData.map(filterCategory => filterCategory.type === category ? currentCategory : filterCategory),\r\n      //         queryString: queryString\r\n      //     }\r\n      // })\r\n  }\r\n\r\n  return <>\r\n  <Header />\r\n    <Layout>\r\n      <XSPFilters filterData={filterState} onFilterApply={onFilterApply} />\r\n      {launchList}\r\n    </Layout>\r\n  <Footer />\r\n  </>\r\n}\r\n\r\nexport async function getStaticProps() {\r\n  // Call an external API endpoint to get posts.\r\n  // You can use any data fetching library\r\n  const res = await fetch('https://api.spaceXdata.com/v3/launches?limit=100')\r\n  const posts = await res.json()\r\n\r\n  // By returning { props: posts }, the Blog component\r\n  // will receive `posts` as a prop at build time\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  }\r\n}\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}